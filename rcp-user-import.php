<?php
/**
 * Plugin Name: Restrict Content Pro - CSV User Import
 * Plugin URL: https://restrictcontentpro.com/downloads/csv-user-import/
 * Description: Allows you to import a CSV of users into Restrict Content Pro
 * Version: 1.1.4
 * Author: Pippin Williamson
 * Author URI: https://pippinsplugins.com
 * Contributors: mordauk, chriscoyier, mindctrl
 */

if ( ! defined( 'RCP_CSVUI_PLUGIN_DIR' ) ) {
	define( 'RCP_CSVUI_PLUGIN_DIR', dirname( __FILE__ ) );
}

ini_set( 'max_execution_time', 90 );

/**
 * Create admin sub-menu page for CSV Import
 *
 * @return void
 */
function rcp_csvui_menu_page() {
	global $rcp_csvui_import_page;
	$rcp_csvui_import_page = add_submenu_page( 'rcp-members', __( 'CSV Import', 'rcp_csvui' ), __( 'CSV Import', 'rcp_csvui' ), 'manage_options', 'rcp-csv-import', 'rcp_csvui_purchase_import' );
	if ( $rcp_csvui_import_page ) {
			add_action( 'load-' . $rcp_csvui_import_page, 'rcp_csvui_menu_page_help_tabs' );
	}
}
add_action( 'admin_menu', 'rcp_csvui_menu_page', 100 );

function rcp_csvui_menu_page_help_tabs() {
	$screen = get_current_screen();
	$screen->add_help_tab( array(
		'id'      => 'general',
		'title'   => 'General',
		'callback' => 'rcp_csvui_help_tab_content_general',
	) );

	$screen->add_help_tab( array(
		'id'      => 'supported-fields',
		'title'   => 'Supported Fields',
		'callback' => 'rcp_csvui_help_tab_content_supported_fields',
	) );

}

function rcp_csvui_help_tab_content_general() {
	?>
	<p>Your CSV file should contain the following fields: user_email, first_name, last_name, and user_login. If you want to update existing users, you can include an ID field as well. Optionally, you can import a member's payment profile ID, expiration date, subscription key, recurring status, and user password.</p>
	<p>The user_email field is the only required field, though we recommend using as many fields as possible so you can better personalize the customer experience. Note, if you leave the user_login field blank, the email address will be used for the login name.</p>
	<?php
}

function rcp_csvui_help_tab_content_supported_fields() {
	?>
	<ul>
		<li><strong>user_email</strong> - the member's email address</li>
		<li><strong>first_name</strong> - the member's first name</li>
		<li><strong>last_name</strong> - the member's last name</li>
		<li><strong>user_login</strong> - the member's login name</li>
		<li><strong>user_password</strong> - the member's password</li>
		<li><strong>ID</strong> - the member's user ID (valid only for existing users)</li>
		<li><strong>subscription_key</strong> - the user's subscription key, generated by Restrict Content Pro</li>
		<li><strong>expiration</strong> - the member's subscription expiration date</li>
		<li><strong>payment_profile_id</strong> - the member's payment profile ID from the payment gateway. For Stripe, this ID has a prefix of cus_. For PayPal this ID has a prefix of I-. That's the letter I (comes after H) and a dash. For Authorize.net this ID has a prefix of anet_.</li>
		<li><strong>recurring</strong> - whether or not the member has a recurring subscription</li>
	</ul>
	<?php
}

/**
 * Render the CSV Import page
 *
 * @return void
 */
function rcp_csvui_purchase_import() {
	?>
	<div class="wrap">
		<h2><?php _e( 'CSV User Import', 'rcp_csvui' ); ?></h2>
		<?php settings_errors( 'rcp-csv-ui' ); ?>
		<P><?php _e( 'Use this tool to import user memberships into Restrict Content Pro', 'rcp_csvui' ); ?></p>
		<p><?php _e( '<strong>Note</strong>: your CSV should contain the following fields: <em>user_email, first_name, last_name, user_login</em>. If you wish to update existing users, you can include a <em>ID</em> field as well.', 'rcp_csvui' ); ?></p>
		<script type="text/javascript">jQuery(document).ready(function($) { var dateFormat = 'yy-mm-dd'; $('.rcp_datepicker').datepicker({dateFormat: dateFormat}); });</script>
		<form id="rcp_csvui_import" enctype="multipart/form-data" method="post">
			<table class="form-table">
				<tr>
					<th><?php _e( 'CSV File', 'rcp_csvui' ); ?></th>
					<td>
						<input type="file" name="rcp_csvui_file"/>
						<div class="description"><?php _e( 'Select the CSV file to import. Must follow guidelines above.', 'rcp_csvui' ); ?></div>
					</td>
				</tr>
				<tr>
					<th><?php _e( 'Subscription Level', 'rcp_csv_ui' ); ?></th>
					<td>
						<select name="rcp_level" id="rcp_level">
						<?php
						$subscription_levels = rcp_get_subscription_levels();
						foreach ( $subscription_levels as $level ) {
							echo '<option value="' . esc_attr( absint( $level->id ) ) . '">' . esc_html( $level->name ) . '</option>';
						}
						?>
						</select>
						<div class="description"><?php _e( 'Select the subscription level to add users to.', 'rcp_csvui' ); ?></div>
					</td>
				</tr>
				<tr>
					<th><?php _e('Status', 'rcp_csv_ui'); ?></th>
					<td>
						<select name="rcp_status" id="rcp_status">
							<option value="active"><?php _e( 'Active', 'rcp_csvui' ); ?></option>
							<option value="pending"><?php _e( 'Pending', 'rcp_csvui' ); ?></option>
							<option value="cancelled"><?php _e( 'Cancelled', 'rcp_csvui' ); ?></option>
							<option value="expired"><?php _e( 'Expired', 'rcp_csvui' ); ?></option>
							<option value="free"><?php _e( 'Free', 'rcp_csvui' ); ?></option>
						</select>
						<div class="description"><?php _e( 'Select the subscription status to import users with.', 'rcp_csvui' ); ?></div>
					</td>
				</tr>
				<tr>
					<th><?php _e( 'Expiration', 'rcp_csv_ui' ); ?></th>
					<td>
						<input type="text" name="rcp_expiration" id="rcp_expiration" value="" class="rcp_datepicker"/>
						<div class="description"><?php _e( 'Select the expiration date for all users. Leave this blank and the expiration date will be automatically calculated based on the selected subscription.', 'rcp_csvui' ); ?></div>
					</td>
				</tr>

			</table>
			<input type="hidden" name="rcp_action" value="process_csv_import"/>
			<?php wp_nonce_field( 'rcp_csvui_nonce', 'rcp_csvui_nonce' ); ?>
			<?php submit_button( __( 'Upload and Import', 'rcp_csvui' ) ); ?>
		</form>
	</div>
	<?php
}

/**
 * Process CSV import
 *
 * @return void
 */
function rcp_csvui_process_csv() {

	if ( isset( $_POST['rcp_action'] ) && $_POST['rcp_action'] == 'process_csv_import' ) {

		if ( ! wp_verify_nonce( $_POST['rcp_csvui_nonce'], 'rcp_csvui_nonce' ) ) {
			return;
		}

		if ( ! class_exists( 'parseCSV' ) ) {
			require_once dirname( __FILE__ ) . '/parsecsv.lib.php';
		}

		$import_file = ! empty( $_FILES['rcp_csvui_file'] ) ? $_FILES['rcp_csvui_file']['tmp_name'] : false;

		if ( ! $import_file ) {
			wp_die( __('Please upload a CSV file.', 'rcp_csvui' ), __('Error') );
		}

		$csv = new parseCSV();

		$csv->parse( $import_file );

		$subscription_id = isset( $_POST['rcp_level'] ) ? absint( $_POST['rcp_level'] ) : false;

		if ( ! $subscription_id ) {
			wp_die( __('Please select a subscription level.', 'rcp_csvui' ), __('Error') );
		}

		$subscription_details = rcp_get_subscription_details( $subscription_id );

		if ( ! $subscription_details ) {
			wp_die( sprintf( __('That subscription level does not exist: #%d.', 'rcp_csvui' ), $subscription_id ), __('Error') );
		}

		$status = isset( $_POST['rcp_status'] ) ? sanitize_text_field( $_POST['rcp_status'] ) : 'free';

		foreach ( $csv->data as $user ) {

			// Normalize key names
			$user = array_change_key_case( $user, CASE_LOWER );

			$expiration = ! empty( $_POST['rcp_expiration'] ) ? sanitize_text_field( $_POST['rcp_expiration'] ) : false;


			// Fetch existing user data
			if ( ! empty( $user['id'] ) ) {
				$user_data = get_userdata( $user['id'] );
			} else {
				$user_data = get_user_by( 'email', $user['user_email'] );
			}

			// If user does not exist
			if ( ! $user_data ) {

				$email      = $user['user_email'];
				$password   = ! empty( $user['user_password'] ) ? $user['user_password'] : wp_generate_password();
				$user_login = ! empty( $user['user_login'] ) ? $user['user_login'] : $user['user_email'];

				$user_data  = array(
					'user_login' => $user_login,
					'user_email' => $email,
					'first_name' => $user['first_name'],
					'last_name'  => $user['last_name'],
					'user_pass'  => $password,
					'role'       => ! empty( $subscription_details->role ) ? $subscription_details->role : 'subscriber'
				);

				$user_id = wp_insert_user( $user_data );

			} else {
				$user_id = $user_data->ID;
			}

			$member = new RCP_Member( $user_id );

			update_user_meta( $user_id, 'rcp_subscription_level', $subscription_id );

			if ( ! empty( $user['recurring'] ) && in_array( $user['recurring'], array( '1', 'yes' ) ) ) {
				$member->set_recurring( true );
			}

			/**
			 * If the expiration date wasn't specified on the import screen,
			 * check the CSV file. If no expiration in the CSV file, calculate
			 * the expiration date based on the subscription level.
			 */
			if ( ! $expiration || strlen( trim( $expiration ) ) <= 0 ) {

				if ( ! empty( $user['expiration'] ) ) {
					$expiration = $user['expiration'];
				} else {
					// Calculate expiration here
					$expiration = rcp_calculate_subscription_expiration( $subscription_id );
				}
			}

			$member->set_expiration_date( $expiration );

			if ( ! empty( $user['payment_profile_id'] ) ) {
				$member->set_payment_profile_id( $user['payment_profile_id'] );
			}

			if ( ! empty( $user['subscription_key'] ) ) {
				update_user_meta( $user_id, 'rcp_subscription_key', $user['subscription_key'] );
			}

			$member->set_status( $status );

			do_action( 'rcp_user_import_user_added', $user_id, $user_data, $subscription_id, $status, $expiration, $user );
		}

		wp_redirect( admin_url( '/admin.php?page=rcp-csv-import&rcp-message=users-imported' ) );
		exit;
	}
}
add_action( 'admin_init', 'rcp_csvui_process_csv' );

/**
 * Display admin notice after a successful import
 *
 * @return void
 */
function rcp_csvui_notices() {
	if ( isset( $_GET['rcp-message'] ) && $_GET['rcp-message'] == 'users-imported' ) {
		add_settings_error( 'rcp-csv-ui', 'imported', __( 'All users have been imported.', 'rcp_csvui' ), 'updated' );
	}
}
add_action( 'admin_notices', 'rcp_csvui_notices' );

/**
 * Load admin scripts on the import page
 *
 * @param string $hook Current page
 *
 * @return void
 */
function rcp_csvui_scripts( $hook ) {
	global $rcp_csvui_import_page;
	if( $hook != $rcp_csvui_import_page ) {
		return;
	}

	wp_enqueue_style( 'datepicker', RCP_PLUGIN_URL . 'includes/css/datepicker.css' );
	wp_enqueue_script( 'jquery-ui-datepicker' );
}
add_action( 'admin_enqueue_scripts', 'rcp_csvui_scripts' );

/**
 * Convert CSV to array
 *
 * @param string $filename Path to the file.
 * @param string $delimiter Delimeter.
 *
 * @return array|bool
 */
function rcp_csvui_csv_to_array( $filename = '', $delimiter = ',') {
	if ( ! file_exists( $filename ) || ! is_readable( $filename ) ) {
		return false;
	}

	$header = NULL;
	$data = array();
	if ( false !== ( $handle = fopen( $filename, 'r' ) ) ) {
		while ( false !== ( $row = fgetcsv( $handle, 1000, $delimiter ) ) ) {
			if ( ! $header ) {
				$header = $row;
			} else {
				$data[] = array_combine( $header, $row );
			}
		}
		fclose( $handle );
	}
	return $data;
}
